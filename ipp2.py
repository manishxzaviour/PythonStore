# -*- coding: utf-8 -*-
"""IPP2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wk9XGnlDLKDjnu9rI2DesKoLcDmhrJdO
"""

# 1
# DataTypes
_int_ = 10
_foat_ = 10.01
_complex_ = 20+3j
_bool_ = True
_string_ = "hello world"
_list_ = [1,2,"3"]
_tuple_ = (4,5,"6")
_dictonary_ = {"a":7,"b":8,"c":9}
_set_ = {"d","e","f"}

# 2
# Arithmatic Operations
a,b=33,4
print("Arithmatic Operations")
_addition_ = a+b
print(_addition_)
_subtraction_ = a-b
print(_subtraction_)
_multiplication_ = a*b
print(_multiplication_)
_division_ = a/b
print(_division_)
_remainder_ = a%b
print(_remainder_)
_power_ = a**b
print(_power_)
_floorDivision_ = a//b
print(_floorDivision_)

"""

```
Arithmatic Operations
37
29
132
8.25
1
1185921
8
```

"""

# 3
# string concatination and slicing
first_="Manish"
last_="Patil"
name_=first_+" "+last_
firstName=name_[0:6]
print(name_)
print(firstName)

"""

```
Manish Patil
Manish
```

"""

# 4
# current date and time in format “Wed Sep 15 02:26:23 IST 2021”
import datetime
date_=datetime.datetime.now()
print(date_)
dayName_=date_.strftime("%a")
monthName_=date_.strftime("%b")
dayDate_=date_.strftime("%d")
time_=date_.strftime("%X")
year_=date_.strftime("%Y")
Formated_=dayName_+" "+monthName_+" "+dayDate_+" "+time_+" IST "+year_
print("\n",Formated_)

"""

```
2022-04-15 12:56:58.447789

 Fri Apr 15 12:56:58 IST 2022
 ```

"""

# 5
# list creating append and remove operations
list_1=["ele1","ele2","ele3","ele4"]
print("defination: ",list_1)
list_1.append("ele5")
list_2=list_1
print("appended:",list_2)
list_1.remove("ele5")
list_1.pop(1)
list_3=list_1
print("removed: ",list_3)

"""

```
created:  ['ele1', 'ele2', 'ele3', 'ele4']
appended: ['ele1', 'ele2', 'ele3', 'ele4', 'ele5']
removed:  ['ele1', 'ele3', 'ele4']
```

"""

# 6
# dictionaries
dictionary_={"name":"Manish","age":21,"gender":"M"}
print("defination:",dictionary_)
print("element 1 key:value 'age'",":",dictionary_["age"])
print("access values ",dictionary_.get("gender"))
print("access All Keys:",dictionary_.keys())
print("access All Values:",dictionary_.values())
print("access All Items:",dictionary_.items())
print("pop item 'gender' last",dictionary_.popitem())
# check for keys 
if "age" in dictionary_:
  print("key exists 'age' ")
dictionary_2=dictionary_.copy()
print("copy :",dictionary_2)
dictionary_.update({"location":"Pune"})
print("update: ",dictionary_)

"""

```
defination: {'name': 'Manish', 'age': 21, 'gender': 'M'}
element 1 key:value 'age' : 21
access values  M
access All Keys: dict_keys(['name', 'age', 'gender'])
access All Values: dict_values(['Manish', 21, 'M'])
access All Items: dict_items([('name', 'Manish'), ('age', 21), ('gender', 'M')])
pop item 'gender' last ('gender', 'M')
key exists 'age' 
copy : {'name': 'Manish', 'age': 21}
update:  {'name': 'Manish', 'age': 21, 'location': 'Pune'}
```

"""

# 7
# tuple
a=(1,2,3,"a",20.1)
print(a)
print("element 2 =",a[2])
print("element 2:4 =",a[2:5])
list_=list(a)
list_.append("new")
list_.remove("a")
b=tuple(list_)
print("updated =",b)

"""

```
(1, 2, 3, 'a', 20.1)
element 2 = 3
element 2:4 = (3, 'a', 20.1)
updated = (1, 2, 3, 20.1, 'new')
```

"""

# 8
# convert from Celsius to Fahrenheit
Celsius=float(input("Celsius >"))
Fahrenheit=1.8*Celsius+32.0
print("Celsius :" ,Celsius," is :",Fahrenheit," in Fahrenheit")

"""

```
Celsius >25.4
Celsius : 25.4  is : 77.72  in Fahrenheit
```

"""

# 9
# largest of three number
a=[0,0,0]
for i in range(3):
  a[i]=int(input("enter number "+str(i+1)+" "))
print("max of numbers : ",a," is ",max(a))
print(len("            "))

"""
```
enter number 1 12
enter number 2 22
enter number 3 9
max of numbers :  [12, 22, 9]  is  22
```

"""

# 10
# construct pattern using nested for loop
# pattern "          ##              "
# pattern "      ##  ##  ##          "
# pattern "  ##  ##  ##  ##   ##     "
# pattern "##  ##  ##  ##  ##  ##  ##"


m=14 # 10 6 2 0
for i in range(7):
    if (i+1)%2!=0:
      for j in range(m):
        print(end=" ")
      for k in range(i+1):
        print("##",end="  ")
      m=m-4
      print()

"""

```
              ##  
          ##  ##  ##  
      ##  ##  ##  ##  ##  
  ##  ##  ##  ##  ##  ##  ##  
  ```

"""

# 11
# prime numbers less than 20
for i in range(2,20):
  for j in range(2,i):
    if i%j==0:
      break 
  else:
    print(i)

"""

```
2
3
5
7
11
13
17
19
```

"""

# 12
# factorial using recursion
a=int(input("factorial of >"))
def factorial(x):
  if x==1:
    return x
  else:
    return x*factorial(x-1)
print(factorial(a))

"""

```
factorial of >5
120
```




"""

# 13
# reverse a string word by word
string="hello world, how are you"
class flip:
    def __init__(self,string):
      self.string=string
      self.new_list=self.string.split(" ")
      self.new_list.reverse()
      self.new_string=" ".join(self.new_list)
x=flip(string)
print("original :",x.string)
print("split and reversed :",x.new_list)
print("new string :",x.new_string)

"""

```
original : hello world, how are you
split and reversed : ['you', 'are', 'how', 'world,', 'hello']
new string : you are how world, hello
```

"""